As you create the documents for this assignment, be sure to include students who have:
• home_state of California or Washington
• lucky_number ranging from 1 to 15
If you read through all tasks, you will understand these requirements better
To complete this assignment, copy your console text from the MongoDB shell in to a text document and upload it to the platform
=>brew services start mongodb-community@4.4
=>mongo
• Create a database called 'my_first_db'.
=>use my_first_db
• Create students collection.
=>db.createCollection(“students”)
• Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
• Create 5 students with the appropriate info.
=>db.students.insert({name: ‘Mike’, home_state: “California”, lucky_number: 7, birthday: {month: 1, day: 4, year: 2000}})
=>db.students.insert({name: ‘Kai’, home_state: “California”, lucky_number: 17, birthday: {month: 1, day: 5, year: 2000}})
=>db.students.insert({name: ‘Reeva’, home_state: “Washington”, lucky_number: 3, birthday: {month: 11, day: 4, year: 2000}})
=>db.students.insert({name: ‘Cora’, home_state: “Washington”, lucky_number: 5, birthday: {month: 1, day: 4, year: 2008}})
=>db.students.insert({name: ‘Tanya’, home_state: “California”, lucky_number: 9, birthday: {month: 1, day: 4, year: 2007}})
• Get all students.
=>db.students.find().pretty()
• Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
=>db.students.find({$or: [{ home_state: “California”}, {:home_state: “Washington”}]})
•  Get all students whose lucky number is greater than 3
=>db.students.find({lucky_number: {$gt: 3}}).pretty()
• Get all students whose lucky number is less than or equal to 10
=>db.students.find({lucky_number: {$lte: 10}}).pretty()
•  Get all students whose lucky number is between 1 and 9 (inclusive)
=>db.students.find({lucky_number: {$gte: 1, $lte: 9}}).pretty()
•  Add a field named 'interests' to all student documents in the collection. The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'. Add this field to all documents using a single command.
=>db.students.updateMany({}, {$set: {interest: [“coding”, “brunch”, “MongoDB”]}})
• Add some unique interests for each particular student into each of their interest arrays.
=>db.students.update({name: “Kai”}, {$push: {interest: ‘playing’}})
=> db.students.update({name:'Mike'}, {$push: {interest: 'coding'}})
=>db.students.update({name: ‘Tanya’}, {$push: {interest: ‘hiking’}})
=> db.students.update({name: ‘Samantha’}, {$push: {interest: ‘swimming’}})
=> db.students.update({name: ‘Cora’}, {$push: {interest: ‘coding’}})
•  Add the interest 'taxes' into someone's interest array.
=> db.students.update({name:'Mike'}, {$push: {interest: 'taxes'}})
• Remove the 'taxes' interest you just added.
=> db.students.update({name:'Mike'}, {$pull: {interest: 'taxes'}})
•  Remove all students who are from California.
=> db.students.remove({home_state:'California'}) 
•  Remove a student by name
=>db.students.remove({name: “Kai”})
•  Remove a student whose lucky number is greater than 5 (JUST ONE)
=>db.students.remove({lucky_number: {$gt: 5}}, true)
• Add a field to each student collection called 'number_of_belts' and set it to 0.
=>db.students.updateMany({},{$set: {number_of_belt: 0}})
•  Increment this field by 1 for all students in Washington (Seattle Dojo).
=>=>db.students.updateMany({home_state: “Washington”},{$inc: {number_of_belt: 1}})
• Rename the 'number_of_belts' field to 'belts_earned'
=>db.students.updateMany({},{$rename: {“number_of_belt”: “belts_earned”}})
•  Remove the 'lucky_number' field.
=>db.students.updateMany({},{$unset: {‘lucky_number’: ‘’}})
• Add a 'updated_on' field, and set the value as the current date.
=>db.students.updateMany({},{$set: {“updated_at” : Date()}})
